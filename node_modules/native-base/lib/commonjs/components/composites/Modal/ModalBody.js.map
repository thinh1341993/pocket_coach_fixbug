{"version":3,"sources":["ModalBody.tsx"],"names":["ModalBody","ref","children","_scrollview","props","resolvedProps"],"mappings":"wbAAA,qDACA,iEACA,qCACA,2EACA,kD,qIAEA,GAAMA,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,MAMhBC,GANgB,CAOb,IALDC,CAAAA,QAKC,MALDA,QAKC,CAJDC,WAIC,MAJDA,WAIC,CAHEC,KAGF,wEACH,GAAMC,CAAAA,aAAa,CAAG,8BAAmB,WAAnB,CAAgCD,KAAhC,CAAtB,CAEA,GAAI,iDAAsBA,KAAtB,CAAJ,CAAkC,CAChC,MAAO,KAAP,CACD,CACD,MACE,8BAAC,sBAAD,0BAAgBD,WAAhB,+EACE,6BAAC,YAAD,0BAASE,aAAT,EAAwB,GAAG,CAAEJ,GAA7B,8EACGC,QADH,CADF,CADF,CAOD,CApBD,C,aAsBe,gBAAK,sBAAWF,SAAX,CAAL,C","sourcesContent":["import React, { memo, forwardRef } from 'react';\nimport Box, { IBoxProps } from '../../primitives/Box';\nimport { usePropsResolution } from '../../../hooks';\nimport { useHasResponsiveProps } from '../../../hooks/useHasResponsiveProps';\nimport { ScrollView, IScrollViewProps } from '../../basic/ScrollView';\n\nconst ModalBody = (\n  {\n    children,\n    _scrollview,\n    ...props\n  }: IBoxProps & { _scrollview?: IScrollViewProps },\n  ref?: any\n) => {\n  const resolvedProps = usePropsResolution('ModalBody', props);\n  //TODO: refactor for responsive prop\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n  return (\n    <ScrollView {..._scrollview}>\n      <Box {...resolvedProps} ref={ref}>\n        {children}\n      </Box>\n    </ScrollView>\n  );\n};\n\nexport default memo(forwardRef(ModalBody));\n"]}